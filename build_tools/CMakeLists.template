CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(spectrum)
FIND_PACKAGE(Qt4 REQUIRED)

#source code files
SET(spectrum_SOURCES %sources%)
SET(z80interpreter_SOURCES %sources%)

FOREACH(item ${spectrum_SOURCES})
	STRING(REGEX MATCH "z80interpreter.*" isMatch ${item})

	IF(isMatch)
		LIST(REMOVE_ITEM spectrum_SOURCES ${item})
	ENDIF(isMatch)
ENDFOREACH(item)

LIST(REMOVE_ITEM z80interpreter_SOURCES "spectrum_main.cpp")

MESSAGE(STATUS "Spectrum sources: ${spectrum_SOURCES}")
MESSAGE(STATUS "Z80Interpreter sources: ${z80interpreter_SOURCES}")
MESSAGE(FATAL_ERROR "Stopping now.")

# files that need to be processed by uic
SET(spectrum_UI_FILES %uifiles%)

# headers that need to be processed by moc
SET(spectrum_MOC_HEADERS %mocables%)

# all headers
SET(spectrum_HEADERS ${spectrum_MOC_HEADERS} %unmocables%)

# resource files
SET(spectrum_RESOURCES %resources%)

# run moc on the moc headers and get the generated source files
QT4_WRAP_CPP(spectrum_MOC_SOURCES ${spectrum_MOC_HEADERS})

# run uic on the ui files and get the generated source files
QT4_WRAP_UI(spectrum_UI_SOURCES ${spectrum_UI_FILES})
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})

# run qrc on the resource files and get the generated source files
QT4_ADD_RESOURCES(spectrum_RESOURCE_SOURCES ${spectrum_RESOURCES})

#build the application
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})

ADD_EXECUTABLE(spectrum ${spectrum_SOURCES} ${spectrum_MOC_SOURCES} ${spectrum_UI_SOURCES} ${spectrum_RESOURCE_SOURCES})
ADD_EXECUTABLE(z80interpreter ${z80interpreter_SOURCES} ${spectrum_MOC_SOURCES})
TARGET_LINK_LIBRARIES(spectrum ${QT_LIBRARIES})
TARGET_LINK_LIBRARIES(z80interpreter ${QT_LIBRARIES})
